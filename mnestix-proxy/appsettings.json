{
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning"
    }
  },
  "CustomerEndpointsSecurity": {
    "ApiKey": "9FB8BCDFAEE81367A1668E16BDC37"
  },
  "AzureAd": {
    "EnableAzureAdAuth": "false",
    "Instance": "https://login.microsoftonline.com/",
    "ClientId": "ffade4c2-76c8-44fd-9258-743d9cfc2289",
    "CallbackPath": "",
    /*
      You need specify the TenantId only if you want to accept access tokens from a single tenant (line of business app)
      Otherwise you can leave them set to common
    */
    "Domain": "mnestixtest.onmicrosoft.com", // for instance contoso.onmicrosoft.com. Not used in the ASP.NET core template
    "TenantId": "6c4ccecf-2dd4-4241-b7fc-6e95b32dcfac" // A guid (Tenant ID = Directory ID) or 'common' or 'organizations' or 'consumers'
  },
  // if both OpenId and AzureAd are enabled OpenId will be used
  "OpenId": {
    "EnableOpenIdAuth": "false",
    "Issuer": "http://localhost:8080/realms/Menstix",
    "ClientID": "mnestixApi-demo",
    "RequireHttpsMetadata": "false"
  },
  "Features": {
    "AllowRetrievingAllShellsAndSubmodels": "true",
    "AasDiscoveryMiddleware": "true"
  },
  "AllowedHosts": "*",
  "ReverseProxy": {
    "Routes": {
      "MnestixApiRoute": {
        "ClusterId": "mnestixApiCluster",
        "AuthorizationPolicy": "customApiKeyToModifyValuesPolicy",
        "Match": {
          "Path": "api/{**catch-all}"
        }
      },
      "EnvironmentRoute": {
        "ClusterId": "aasRepoCluster",
        "AuthorizationPolicy": "customApiKeyToModifyValuesPolicy",
        "Match": {
          "Path": "repo/{**catch-all}"
        },
        "Transforms": [
          {
            "PathPattern": "/{**catch-all}"
          },
          {
            "ResponseHeader": "Access-Control-Allow-Origin",
            "Set": "*"
          }
        ]
      },
      "SubmodelRepositoryRoute": {
        "ClusterId": "submodelRepoCluster",
        "AuthorizationPolicy": "customApiKeyToModifyValuesPolicy",
        "Match": {
          "Path": "repo/submodels/{**remainder}"
        },
        "Transforms": [
          {
            "PathPattern": "/submodels/{**remainder}"
          },
          {
            "ResponseHeader": "Access-Control-Allow-Origin",
            "Set": "*"
          }
        ]
      },
      "DiscoveryRoute": {
        "ClusterId": "discoveryCluster",
        "AuthorizationPolicy": "customApiKeyToModifyValuesPolicy",
        "Match": {
          "Path": "discovery/{**catch-all}"
        },
        "Transforms": [
          {
            "PathPattern": "{**catch-all}"
          },
          {
            "ResponseHeader": "Access-Control-Allow-Origin",
            "Set": "*"
          }
        ]
      },
      "InfluxRoute": {
        "ClusterId": "influxCluster",
        "CorsPolicy": "allowAnything",
        "Match": {
          "Path": "influx/{**catch-all}"
        },
        "Transforms": [
          {
            "PathPattern": "/{**catch-all}"
          },
          {
            "RequestHeader": "Authorization",
            "Set": "Token ed2E-hcYlPsM3QSzYBtrcnV3U2MDPggyH2KyAWHQMTzWSjOrNmKjhLHU6wusGpviSSTsDlKL8q5jZqm8W2oOdg=="
          }
        ]
      }
    },
    "Clusters": {
      "mnestixApiCluster": {
        "Destinations": {
          "destination1": {
            "Address": "http://localhost:5064/"
          }
        }
      },
      "aasRepoCluster": {
        "Destinations": {
          "destination1": {
            "Address": "http://localhost:8081/"
          }
        }
      },
      "submodelRepoCluster": {
        "Destinations": {
          "destination1": {
            "Address": "http://localhost:8081/"
          }
        }
      },
      "discoveryCluster": {
        "Destinations": {
          "destination1": {
            "Address": "http://localhost:8082/"
          }
        }
      },
      "influxCluster": {
        "Destinations": {
          "destination1": {
            "Address": "http://20.224.163.243:8086"
          }
        }
      }
    }
  }
}
