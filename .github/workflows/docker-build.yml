name: CI and Docker Deploy

on:
  push:
    branches: ['main', 'dev']
    tags: ['v*.*.*']
  pull_request:
    branches: ['dev']
    
env:
  # github.repository as <account>/<repo>
  IMAGE_NAME: mnestix-proxy
  # Update the version manually
  IMAGE_TAG_VERSION: 0.1.0

jobs:
  run-tests:
    name: Integration tests
    runs-on: ubuntu-latest
    permissions:
      contents: read
   
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build solution
        run: dotnet build --no-restore --configuration Release

      - name: Run tests
        run: dotnet test --no-build --verbosity normal --configuration Release

  docker-build:
    name: Build images and push
    needs: run-tests
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request' && github.repository_owner == 'eclipse-mnestix' && 
      (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev')
    permissions:
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_API_TOKEN }}
          
      - name: Extract branch name
        id: extract_branch
        run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
                
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: "."
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ github.ref == 'refs/heads/main' && format('mnestix/{0}:{1}', env.IMAGE_NAME, env.IMAGE_TAG_VERSION) || '' }}
            ${{ github.ref == 'refs/heads/main' && format('mnestix/{0}:latest', env.IMAGE_NAME) || '' }}
            ${{ github.ref != 'refs/heads/main' && format('mnestix/{0}:{1}', env.IMAGE_NAME, steps.extract_branch.outputs.branch) || '' }}